generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  username      String?         @unique
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  Session       Session[]
  Account       Account?

  bosses        Boss_user[]
  items         Item_user[]
  armorSets     ArmorSet_user[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  id                       String  @id @default(cuid())
  userId                   String  @unique
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  user                     User?   @relation(fields: [userId], references: [id])
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  @@unique([provider, providerAccountId])
  @@index([userId])
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  @@index([userId])
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
}

model Boss {
  id          String   @id @default(cuid())
  name        String
  location    String
  major       Boolean @default(false)
  inDlc       Boolean @default(false)

  imageUrl    String
  wikiUrl     String
  locationUrl String @unique

  boss_user   Boss_user[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id            String   @id @default(cuid())
  type          String
  name          String  @unique
  inDlc         Boolean @default(false)

  sortableType  String?

  imageUrl      String
  wikiUrl       String
  locationUrl   String

  item_user     Item_user[]

  armorSet           ArmorSet? @relation(fields: [armorSetId], references: [id])
  armorSetId         String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ArmorSet {
  id            String   @id @default(cuid())
  name          String  @unique
  inDlc         Boolean @default(false)
  boss          Boolean @default(false)

  imageUrl      String
  wikiUrl       String

  elements      Item[]
  armorSet_user ArmorSet_user[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Boss_user {
  id                 String   @id @default(cuid())
  users              User     @relation(fields: [userId], references: [id])
  userId             String
  boss               Boss     @relation(fields: [bossId], references: [id])
  bossId             String
  done               Boolean @default(false)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, bossId])
}

model Item_user {
  id                 String   @id @default(cuid())
  users              User     @relation(fields: [userId], references: [id])
  userId             String
  item               Item     @relation(fields: [itemId], references: [id])
  itemId             String
  done               Boolean @default(false)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, itemId])
}

model ArmorSet_user {
  id                 String   @id @default(cuid())
  users              User     @relation(fields: [userId], references: [id])
  userId             String
  armorSet           ArmorSet     @relation(fields: [armorSetId], references: [id])
  armorSetId         String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, armorSetId])
}